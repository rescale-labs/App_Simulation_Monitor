#!/bin/bash

JOB_USER=$1
MPI_ROLE=$2

export HOME=/enc/$JOB_USER

MOUNT_POINT="%MOUNT_POINT%"
VERSION="%VERSION%"

FIRST_START_FILE=/tmp/.%ANALYSIS_CODE%_%VERSION%

# Make sure the jupyter4all infra is initialised. Timeout as it may happen when
# jupyter4all flag is not enabled. Run the jupyter replacement code only on the
# fist run.
if [ ! -f $FIRST_START_FILE ]; then
  # Wait for the command to start executing
  count=0
  PID_FILE=$(find $HOME/work -name .rescalepid)
  while [ ! "$PID_FILE" ] && [ $count -le 120 ]; do
    echo "Waiting for Command to start executing..."
    sleep 5
    PID_FILE=$(find $HOME/work -name .rescalepid)
    count=$((count + 1))
  done

  if [ ! "$PID_FILE" ]; then
    echo "ERROR: .rescalepid file not detected in time."
    exit 3
  fi

  # Hopefully all healthchecks are now done and we can replace the Jupyter server
  JPID=$(ps -ef | grep -e jupyter-notebook | grep -v list | grep -v grep | awk '{print $2}')
  JPPID=$(ps -ef | grep -e jupyter-notebook | grep -v list | grep -v grep | awk '{print $3}')
  count=0

  while [ -z "$JPID" ] && [ $count -le 60 ]; do
    echo "Waiting for Jupyter to start..."
    sleep 5
    JPID=$(ps -ef | grep -e jupyter-notebook | grep -v list | grep -v grep | awk '{print $2}')
    JPPID=$(ps -ef | grep -e jupyter-notebook | grep -v list | grep -v grep | awk '{print $3}')
    count=$((count + 1))
  done

  # Check if jupyter4all is enabled
  if [ -z "$JPID" ]; then
    echo "ERROR: Rescale App failed to start. Check jupyter4all flag is enabled."
    exit 2
  fi

  kill -9 $JPPID $JPID
  touch $FIRST_START_FILE
fi

INSTALL_DIR=$MOUNT_POINT/$VERSION

eval "$(/${INSTALL_DIR}/miniconda/bin/conda shell.bash hook)"
conda activate RESCALE

cd $INSTALL_DIR

# When the setup_command is run RESCALE_CLUSTER_ID is not set, even if this
# script is run with JOB_USER - HOME will be set to /root, envvars set by
# attached tiles like ANSYSCFX_VERSION are not there yet. However when Jupyter
# starts the platform populated .bash_profile of the job user with all we need.
source $HOME/.bash_profile

# Start daemonized (in the background), so the main proces exits and the actual
# simulation can start
CERT=$HOME/.certs/nb.pem
CKEY=$HOME/.certs/nb.key

echo "Simulation Monitor RescaleApp ready. Open the Jupyter Notebook link to access it."

gunicorn --certfile $CERT --keyfile $CKEY -b 0.0.0.0:8888 app:server
